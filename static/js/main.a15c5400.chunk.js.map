{"version":3,"sources":["components/pages/ContentSupported.js","components/pages/tableData.js","components/pages/IngestionFlow.js","App.js","reportWebVitals.js","index.js"],"names":["ContentSupported","className","style","display","justifyContent","INGESTION_FLOW","id","name","apiFieldName","description","mandatory","EPISODE_TABLE","TVSHOWS_TABLE","MOVIES_TABLE","IngestionFlow","map","item","idx","href","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a15c5400.chunk.js","sourcesContent":["import \"./style.css\";\r\nfunction ContentSupported(){\r\n    return(\r\n        <div className=\"documentation\">\r\n        <div className=\"heading\" style={{display:\"flex\",justifyContent:\"center\"}}>API Integration Document</div><br/><br/>\r\n<p className=\"heading\">Types of content supported</p><br/><br/>\r\n   <span className=\"subHeading\">Movies</span><br/><br/>\r\n   <span className=\"text\">In this category, content partners will be able to ingest content which comes in below categories:</span><br/><br/>\r\n   <span className=\"text\">1.Feature Films</span><br/>\r\n   <span className=\"text\">2.Short Movies</span><br/>\r\n   <span className=\"text\">3.Documentaries</span><br/><br/>\r\n   <span className=\"subHeading\"> TV Shows </span><br/><br/>\r\n   <span className=\"text\">Airtel Xstream provides the flexibility to ingest TV Shows on the platform. A TV Show can include multiple seasons and under each season there can be multiple episodes.</span><br/><br/>\r\n   <span className=\"subHeading\">Videos</span><br/><br/>\r\n   <span className=\"text\">Airtel Xstream also allows to ingest standalone video contents. Some examples of video contents :</span><br/><br/>\r\n   <span className=\"text\">1.Music Videos</span><br/>\r\n   <span className=\"text\">2.News Clips</span><br/><br/>\r\n   <span className=\"subHeading\"> Promos</span><br/><br/>\r\n   <span className=\"text\">Each content partner can provide us with a promo video which will be displayed on the partner channel page. Whenever a user visits the partner channel page this promo video will be played automatically. This gives a brief overview of content provided by the partner and helps with user engagement.</span><br/><br/>\r\n   <span className=\"subHeading\">Trailers</span><br/><br/>\r\n   <span className=\"text\">Content partners are allowed to ingest trailer contents also. Below content types can have trailers associated with them :</span><br/><br/>\r\n\r\n   <span className=\"text\">1.Movies</span><br/>\r\n   <span className=\"text\">2.TV Shows</span><br/>\r\n   <span className=\"text\">3.Seasons</span><br/>\r\n   <span className=\"text\">4.Episodes</span><br/>\r\n\r\n   <span className=\"text\">Trailers are considered as free content (unless specified otherwise) and hence are playable without subscription. For paid content, once the trailer is played users will be provided with the option to subscribe in order to continue watching the actual content.</span>\r\n   <br/><br/>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ContentSupported;","\r\n const INGESTION_FLOW=[\r\n    {\r\n        id:1,\r\n        name:\"Title\",\r\n        apiFieldName:\"title\",\r\n        description:\"This should contain the title of content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"Description\",\r\n        apiFieldName:\"description\",\r\n        description:\"This should contain the synopsis of given content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"Short Description\",\r\n        apiFieldName:\"short_description\",\r\n        description:\"A brief description about content in less than 150 characters\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"Title\",\r\n        apiFieldName:\"title\",\r\n        description:\"This should contain the title of content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:5,\r\n        name:\"Portrait Image of Aspect Ratio 2:3\",\r\n        apiFieldName:\"portrait_23\",\r\n        description:\"Portrait image to be displayed for a content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:6,\r\n        name:\"Landscape Image of Aspect Ratio 16:9\",\r\n        apiFieldName:\"landscape_169\",\r\n        description:\"Landscape image to be displayed for a content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:7,\r\n        name:\"Unique content identifier\",\r\n        apiFieldName:\"contentId\",\r\n        description:\"A unique ID to identify the contents. This will be used to uniquely identify a content between Airtel and the partner in case of issues.\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {\r\n        id:8,\r\n        name:\"Credits\",\r\n        apiFieldName:\"credits\",\r\n        description:\"List of actors, directors, producers etc\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {\r\n        id:9,\r\n        name:\"Duration\",\r\n        apiFieldName:\"duration\",\r\n        description:\"Duration of content (In seconds preferably)\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:10,\r\n        name:\"Release Date/Year\",\r\n        apiFieldName:\"releaseDate\",\r\n        description:\"Release date or year of the content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:11,\r\n        name:\"Expiry Date of Content\",\r\n        apiFieldName:\"expiryTime\",\r\n        description:\"The timestamp after which content will be removed/expired\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {id:12,\r\n        name:\"Free/Paid flag\",\r\n        apiFieldName:\"isFree\",\r\n        description:\"Boolean value representing if content is free or paid\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:13,\r\n        name:\"Genres\",\r\n        apiFieldName:\"geners\",\r\n        description:\"Genres list of the conten\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:14,\r\n        name:\"Downloadable Flag\",\r\n        apiFieldName:\"isDownloadable\",\r\n        description:\"Boolean value representing if content is downloadable or not\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:15,\r\n        name:\"Age Rating*\",\r\n        apiFieldName:\"ageRating\",\r\n        description:\"Age Rating of content as per OTT guidelines\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:16,\r\n        name:\"Content Type**\",\r\n        apiFieldName:\"contentType\",\r\n        description:\"To identify the content type\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:17,\r\n        name:\"Stream Urls\",\r\n        apiFieldName:\"streamUrls\",\r\n        description:\"List of HLS/DASH stream urls of content (Refer to point 5 for more details)\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {id:18,\r\n        name:\"Language\",\r\n        apiFieldName:\"language\",\r\n        description:\"List of audio languages used in content\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:19,\r\n        name:\"Feature Banner HD\",\r\n        apiFieldName:\"featureBannerHD\",\r\n        description:\"Feature banner for displaying on Large screens. Dimension : 2280x699 / 300ppi\",\r\n        mandatory:\"YES\",\r\n    },\r\n    \r\n        \r\n]\r\n\r\nconst MOVIES_TABLE=[\r\n    {id:1,\r\n        name:\"Duration\",\r\n        apiFieldName:\"duration\",\r\n        description:\"Duration of trailer\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:2,\r\n        name:\"Title\",\r\n        apiFieldName:\"title\",\r\n        description:\"Title of trailer. If not provide MOVIE_NAME - TRAILER will be used\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {id:3,\r\n        name:\"Trailer URL\",\r\n        apiFieldName:\"trailerUrl\",\r\n        description:\"HLS/DASH URL of trailer video\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:4,\r\n        name:\"Portrait Image of Aspect Ratio 2:3\",\r\n        apiFieldName:\"portrait_23\",\r\n        description:\"Portrait image to be displayed for trailer\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:5,\r\n        name:\"Landscape Image of Aspect Ratio 16:9\",\r\n        apiFieldName:\"landscape_169\",\r\n        description:\"Landscape image to be displayed for trailer\",\r\n        mandatory:\"YES\",\r\n    },\r\n\r\n]\r\n\r\nconst TVSHOWS_TABLE=[\r\n    {id:1,\r\n        name:\"Season Number\",\r\n        apiFieldName:\"seasonNumber\",\r\n        description:\"Indicating the season number\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:2,\r\n        name:\"Title\",\r\n        apiFieldName:\"title\",\r\n        description:\"Title of trailer. If not provided TVSHOW_NAME - SEASON NUMBER will be used\",\r\n        mandatory:\"NO\",\r\n    },\r\n    {id:3,\r\n        name:\"Season Id\",\r\n        apiFieldName:\"seasonId\",\r\n        description:\"Unique identifier to identify different seasons\",\r\n        mandatory:\"YES\",\r\n    },\r\n]\r\n\r\nconst EPISODE_TABLE=[\r\n    {id:1,\r\n        name:\"Episode Number\",\r\n        apiFieldName:\"episodeNumber\",\r\n        description:\"Indicating the episode number\",\r\n        mandatory:\"YES\",\r\n    },\r\n    {id:2,\r\n        name:\"Title\",\r\n        apiFieldName:\"title\",\r\n        description:\"Title of Episode. If not provided TVSHOW_NAME - SEASON NUMBER - EPISODE NUMBER will be used\",\r\n        mandatory:\"NO\",\r\n    },\r\n]\r\n\r\n\r\nexport default {INGESTION_FLOW,EPISODE_TABLE,TVSHOWS_TABLE,MOVIES_TABLE}","import \"./style.css\";\r\nimport INGESTION_FLOW from \"../pages/tableData\";\r\nimport MOVIES_TABLE from \"../pages/tableData\";\r\n\r\nfunction IngestionFlow (){\r\n    return(\r\n        <div className=\"documentation\">\r\n<p className=\"heading\">Ingestion Workflow</p><br/><br/>\r\n\r\n<span className=\"text\">For each content partner, ingestion is the core component to get onboarded on the Airtel Xtream platform. Through ingestion, Airtel Xstream will collect the content catalog from the partner and ingest it into our database. Below is the basic workflow of the ingestion process :</span><br/><br/>\r\n<span className=\"text\">To ingest contents Airtel Xstream servers will hit the APIs provided by content partners. The below mentioned fields are common for all content types:</span><br/><br/>\r\n\r\n<table className=\"table\"> \r\n  <tr>\r\n      <th>Name</th>\r\n      <th>API Field Name</th>\r\n      <th>Description</th>\r\n      <th>Mandatory</th>\r\n  </tr>\r\n  {\r\n      INGESTION_FLOW.map((item,idx)=>(\r\n        <tr key={idx}>\r\n        <td>{item.name}</td>\r\n        <td>{item.apiFieldName}</td>\r\n        <td>{item.description}</td>\r\n        <td>{item.mandatory}</td>\r\n    </tr>\r\n      ))\r\n  }\r\n <span className=\"small_text\">Table 1 : Commons fields for all content types\r\n </span><br/>\r\n</table><br/><br/>\r\n<span className=\"text\">* Possible values of ageRating : A, U, U/A 7+, U/A 13+, U/A 16+</span>\r\n<span className=\"text\">** Possible values of contentType : MOVIE, VIDEO, TVSHOW, EPISODE, TRAILER, PROMO, SEASON</span><br/>\r\n<span className=\"text\">Apart from above mentioned fields we need additional details based on content type as described below :</span><br/><br/>\r\n\r\n<span className=\"subHeading\">Movies/Videos</span><br/><br/>\r\n<span className=\"text\">In the case of movies and videos we need a paginated API from a content partner. Movies can also contain trailers with them. In that case we need trailer information with movie itself with following additional details in trailers key : <a href=\"https://run.mocky.io/v3/67a72c59-6193-4288-b8d1-4974f00f9849\" target=\"_blank\">(Click here for sample response)</a></span><br/><br/>\r\n\r\n<table className=\"table\"> \r\n  <tr>\r\n      <th>Name</th>\r\n      <th>API Field Name</th>\r\n      <th>Description</th>\r\n      <th>Mandatory</th>\r\n  </tr>\r\n  {\r\n      MOVIES_TABLE.map((item,idx)=>(\r\n        <tr key={idx}>\r\n        <td>{item.name}</td>\r\n        <td>{item.apiFieldName}</td>\r\n        <td>{item.description}</td>\r\n        <td>{item.mandatory}</td>\r\n    </tr>\r\n      ))\r\n  }\r\n <span className=\"small_text\">Table 2 : Additional fields for Movies</span><br/>\r\n</table><br/><br/>\r\n\r\n</div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default IngestionFlow;","import ContentSupported from \"./components/pages/ContentSupported\";\nimport IngestionFlow from \"./components/pages/IngestionFlow\";\n\nfunction App() {\n  return (\n      <>\n         <ContentSupported/>\n         <IngestionFlow/>\n         </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}